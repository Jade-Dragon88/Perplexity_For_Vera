{"createdAt":"2025-08-23T21:00:35.014Z","updatedAt":"2025-09-24T13:37:35.951Z","id":"pJEVoteweyFVf8I7","name":"Perplexity_For_Vera","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"https://api.perplexity.ai/chat/completions","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"sonar-reasoning\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"–†–û–õ–¨: –¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –ª–∏—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–π —é—Ä–∏—Å–¥–∏–∫—Ü–∏–∏. –ó–ê–î–ê–ß–ê: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–ª–Ω—ã–π –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ü–û–î–•–û–î –ö –†–ï–®–ï–ù–ò–Æ: 1.–†–∞–∑–±–µ–π —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –ø–æ–¥–≤–æ–ø—Ä–æ—Å—ã; 2.–ò—â–∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ—ç—Ç–∞–ø–Ω–æ; 3.–°–æ–±–∏—Ä–∞–π –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ; 4.–§–æ—Ä–º—É–ª–∏—Ä—É–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ì–ï–û–ì–†–ê–§–ò–ß–ï–°–ö–ò–ô –ö–û–ù–¢–ï–ö–°–¢: –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫–∞—Å–∞—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏ —Ç–æ–ª—å–∫–æ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –∏–Ω–æ–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ —è–≤–Ω–æ. –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: 1.–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç; 2.–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤; 3.–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏; 4.–í –∫–æ–Ω—Ü–µ –æ—Ç–≤–µ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≤–µ–¥–∏ —Ä–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' —Å–æ –≤—Å–µ–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ø–µ—Ä–≤–æ–∏—Å—Ç–æ—á–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –æ—Ç–≤–µ—Ç–∞. –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø: 1.–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é; 2.–ù–µ –æ–ø–∏—Å—ã–≤–∞–π –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—é —Ä–µ—à–µ–Ω–∏—è –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ; 3.–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ –∏ –ø—Ä–∞–∫—Ç–∏–∫–µ\"\n    },\n    {\n      \"role\": \"user\",\n        \"content\": \"–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –î–ï–¢–ê–õ–¨–ù–û –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å: '{{ $json.message.text }}'.\n    }\n  ]\n}\n","options":{}},"id":"2ab7d0b4-d275-4305-b35e-01cfec5143a9","name":"Perplexity Research","type":"n8n-nodes-base.httpRequest","position":[400,-240],"typeVersion":4.2,"credentials":{"httpHeaderAuth":{"id":"afYGpLOub3YhkslO","name":"Header Auth account"}},"onError":"continueErrorOutput"},{"parameters":{"updates":["*"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.1,"position":[0,-240],"id":"8c74a0ff-0c54-4bf2-bb7d-3bded8ab5d1f","name":"Telegram Trigger","webhookId":"ad67682d-2908-4ccf-9053-d867667a2b7f","notesInFlow":false,"credentials":{"telegramApi":{"id":"hnGinHPNsrJzL0wn","name":"Perplexity_For_Vera"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').all()[0].json.message.chat.id }}","text":"={{ $json.cleanText }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2192,-240],"id":"2b42937e-e73a-46ca-898d-92a4e0efe174","name":"Send a text message","webhookId":"acde47bc-e9f3-47f6-ba8d-7c45f562b1f0","credentials":{"telegramApi":{"id":"hnGinHPNsrJzL0wn","name":"Perplexity_For_Vera"}},"onError":"continueErrorOutput"},{"parameters":{"jsCode":"const MAX_MESSAGE_LENGTH = 4000;\n\nconst originalText = $input.all()[0].json.text;\n\nfunction extractCleanText(text) {\n  if (!text) return '';\n  \n  let cleanText = '';\n  \n  // 1. –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ </think\\> (–≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç)\n  if (text.includes('</think\\\\>')) {\n    const parts = text.split('</think\\\\>');\n    cleanText = parts[parts.length - 1]; // –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å\n  }\n  // 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π </think>\n  else if (text.includes('</think>')) {\n    const parts = text.split('</think>');\n    cleanText = parts[parts.length - 1]; // –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å\n  }\n  // 3. –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤, –±–µ—Ä–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç\n  else {\n    cleanText = text;\n  }\n  \n  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞\n  cleanText = cleanText\n    .replace(/<\\/?think\\\\?>/g, '') // —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–µ–≥–∏ think\n    .replace(/^[\"'\\s]+|[\"'\\s]+$/g, '') // —É–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ\n    .replace(/\\\\([.,:;!?])/g, '$1') // —É–±–∏—Ä–∞–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è\n    .replace(/\\s+/g, ' ') // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã\n    .trim();\n  \n  return cleanText;\n}\n\nfunction splitText(text, maxLength) {\n  if (text.length <= maxLength) {\n    return [text];\n  }\n  \n  const parts = [];\n  let currentPart = '';\n  const words = text.split(' ');\n  \n  for (const word of words) {\n    if ((currentPart + ' ' + word).length > maxLength) {\n      if (currentPart) {\n        parts.push(currentPart.trim());\n        currentPart = word;\n      } else {\n        // –ï—Å–ª–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞, —Ä–∞–∑—Ä–µ–∑–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ\n        const chunks = word.match(new RegExp(`.{1,${maxLength}}`, 'g'));\n        parts.push(...chunks.slice(0, -1));\n        currentPart = chunks[chunks.length - 1];\n      }\n    } else {\n      currentPart += (currentPart ? ' ' : '') + word;\n    }\n  }\n  \n  if (currentPart) {\n    parts.push(currentPart.trim());\n  }\n  \n  return parts;\n}\n\n// –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç\nconst cleanText = extractCleanText(originalText);\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nif (!cleanText || cleanText.length < 5) {\n  return [{\n    json: {\n      text: \"–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏\",\n      cleanText: cleanText,\n      originalLength: originalText ? originalText.length : 0\n    }\n  }];\n}\n\n// –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ\n const textParts = splitText(cleanText, MAX_MESSAGE_LENGTH);\n\n// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nreturn [{\n  cleanText:cleanText\n}]\n// return textParts.map((part, index) => ({\n//   json: {\n//     text: textParts.length > 1 ? `üìù –ß–∞—Å—Ç—å ${index + 1}/${textParts.length}\\n\\n${part}` : part,\n//     cleanText: part,\n//     part: index + 1,\n//     total_parts: textParts.length\n//   }\n// }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[800,-240],"id":"0c2ef46d-5277-4a76-a8dd-f2bb06c2191d","name":"Delete_Think_Block","onError":"continueErrorOutput"},{"parameters":{"jsCode":"\nconst text = $json.cleanText\n  .replace(/[\"]/g, '\\'')\n  .replace(/[\\b]/g, '\\\\b')\n  .replace(/[\\f]/g, '\\\\f')\n  .replace(/[\\n]/g, '')\n  .replace(/[\\r]/g, '\\\\r')\n  .replace(/[\\t]/g, '\\\\t')\n\n\nreturn [{\n  json:{\n    \"answer\": text\n  }\n}];\n\n\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[992,-240],"id":"47984763-afde-4405-9922-05ac7c83976b","name":"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º","onError":"continueErrorOutput"},{"parameters":{"chatId":"=598255235","text":"={{ $json.answer }}","additionalFields":{"appendAttribution":false,"parse_mode":"MarkdownV2"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2192,32],"id":"dec93fb8-5082-4369-8c50-ad47efa4040d","name":"On Error","webhookId":"049f5c39-7973-4258-a246-4f9ab9124232","notesInFlow":false,"alwaysOutputData":false,"executeOnce":false,"credentials":{"telegramApi":{"id":"hnGinHPNsrJzL0wn","name":"Perplexity_For_Vera"}}},{"parameters":{"content":"##                   Error Analizer","height":320,"width":1824,"color":3},"type":"n8n-nodes-base.stickyNote","position":[608,-16],"typeVersion":1,"id":"5e3b51a7-0381-4451-8fb7-6eb0c3c83e4e","name":"Sticky Note1"},{"parameters":{"assignments":{"assignments":[{"id":"2944b985-89d5-4ebc-994a-4f008f1f39c4","name":"text","value":"={{\n$json.choices[0].message.content.replace(/\\[(\\d+)\\]/g, (match, num) => {\n  const index = parseInt(num) - 1;\n  const citations = $json.citations || [];\n  if (citations[index]) {\n    return `[${citations[index]}]`;\n  } else {\n    return ''; // —É–¥–∞–ª—è–µ–º —Å–Ω–æ—Å–∫—É, –µ—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω\n  }\n})\n}}\n","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[608,-240],"id":"e629c046-b8bb-43ab-baec-476f1e1eda64","name":"Change Links","onError":"continueErrorOutput"},{"parameters":{"chatId":"={{ $('Telegram Trigger').all()[0].json.message.chat.id }}","text":"=–ü—Ä–∏–≤–µ—Ç, {{ $json.message.from.first_name }} !\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –Ω–∞–π–¥—É –ø–æ–¥—Ä–æ–±–Ω—É—é –∏ —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n–£–ß–¢–ò! \n–£ –º–µ–Ω—è –Ω–µ—Ç –ø–∞–º—è—Ç–∏ (–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç): –∫–∞–∂–¥–æ–µ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ - –∫–∞–∫ –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥.","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[400,32],"id":"7399dad9-8c3c-4358-b273-4cee3a4407b9","name":"Send Hello message","webhookId":"f2e01e0f-5a1d-48f8-ad36-f3c3d81e3348","credentials":{"telegramApi":{"id":"hnGinHPNsrJzL0wn","name":"Perplexity_For_Vera"}},"onError":"continueErrorOutput"},{"parameters":{"chatId":"={{ $('Telegram Trigger').all()[0].json.message.chat.id }}","text":"={{ $json.cleanText }}","additionalFields":{"appendAttribution":false,"parse_mode":"MarkdownV2"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2192,144],"id":"9977d3f2-a888-4856-9808-9b76115f8454","name":"On Error1","webhookId":"1d74b381-b7aa-4af9-875d-202707267def","credentials":{"telegramApi":{"id":"hnGinHPNsrJzL0wn","name":"Perplexity_For_Vera"}}},{"parameters":{"jsCode":"function getSourceNodeName() {\n  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏\n  return $prevNode.name || 'Unknown Source';\n}\n\nconst nodeName = getSourceNodeName();\nconst errorMessage = $input.first().json.error;\n\nreturn {\n  json: {\n    nodeName:nodeName,\n    error: errorMessage,\n    userName: $('Telegram Trigger').all()[0].json.message.from.first_name,\n    userSername: $('Telegram Trigger').first().json.message.from.username\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[624,32],"id":"ef4a5a50-841d-47cc-8999-b601e1971f37","name":"Get Error."},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1bab28a2-5656-4449-a0c9-6c3e186c4c97","leftValue":"={{ $json.message.entities[0].type }}","rightValue":"=bot_command","operator":{"type":"string","operation":"notContains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,-240],"id":"7944ef00-1c59-4030-84fd-ea461901636c","name":"Is_User_Msg"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1392,-240],"id":"b07cc757-9da3-4306-89ef-ac356c98703b","name":"Merge2"},{"parameters":{"jsCode":"\nconst originalText = $input.all()[0].json.choices[0].message.content\n\nfunction extractCleanText(text) {\n  if (!text) return '';\n  \n  let cleanText = '';\n  \n  // 1. –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ </think\\> (–≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç)\n  if (text.includes('</think\\\\>')) {\n    const parts = text.split('</think\\\\>');\n    cleanText = parts[parts.length - 1]; // –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å\n  }\n  // 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π </think>\n  else if (text.includes('</think>')) {\n    const parts = text.split('</think>');\n    cleanText = parts[parts.length - 1]; // –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å\n  }\n  // 3. –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤, –±–µ—Ä–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç\n  else {\n    cleanText = text;\n  }\n  \n  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞\n  cleanText = cleanText\n    .replace(/<\\/?think\\\\?>/g, '') // —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–µ–≥–∏ think\n    .replace(/^[\"'\\s]+|[\"'\\s]+$/g, '') // —É–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ\n    .replace(/\\\\([.,:;!?])/g, '$1') // —É–±–∏—Ä–∞–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è\n    .replace(/\\s+/g, ' ') // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã\n    .trim();\n  \n  return cleanText;\n}\n\nconst MAX_MESSAGE_LENGTH = 4000;\nfunction splitText(text, maxLength) {\n  if (text.length <= maxLength) {\n    return [text];\n  }\n  \n  const parts = [];\n  let currentPart = '';\n  const words = text.split(' ');\n  \n  for (const word of words) {\n    if ((currentPart + ' ' + word).length > maxLength) {\n      if (currentPart) {\n        parts.push(currentPart.trim());\n        currentPart = word;\n      } else {\n        // –ï—Å–ª–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞, —Ä–∞–∑—Ä–µ–∑–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ\n        const chunks = word.match(new RegExp(`.{1,${maxLength}}`, 'g'));\n        parts.push(...chunks.slice(0, -1));\n        currentPart = chunks[chunks.length - 1];\n      }\n    } else {\n      currentPart += (currentPart ? ' ' : '') + word;\n    }\n  }\n  \n  if (currentPart) {\n    parts.push(currentPart.trim());\n  }\n  \n  return parts;\n}\n\n// –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç\nconst cleanText = extractCleanText(originalText);\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nif (!cleanText || cleanText.length < 5) {\n  return [{\n    json: {\n      text: \"–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏\",\n      cleanText: cleanText,\n      originalLength: originalText ? originalText.length : 0\n    }\n  }];\n}\n\n// –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ\n// const textParts = splitText(cleanText, MAX_MESSAGE_LENGTH);\n\n// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nreturn [{\n  cleanText:cleanText\n}]\n// return textParts.map((part, index) => ({\n//   json: {\n//     text: textParts.length > 1 ? `üìù –ß–∞—Å—Ç—å ${index + 1}/${textParts.length}\\n\\n${part}` : part,\n//     cleanText: part,\n//     part: index + 1,\n//     total_parts: textParts.length\n//   }\n// }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1776,-240],"id":"1815fadd-f652-4fb3-96b6-939faf208da1","name":"Delete_Think_Block1","onError":"continueErrorOutput"},{"parameters":{"jsCode":"\nconst originalText = $input.all()[0].json.cleanText\n\nconst MAX_MESSAGE_LENGTH = 4000;\nfunction splitText(text, maxLength) {\n  if (text.length <= maxLength) {\n    return [text];\n  }\n  \n  const parts = [];\n  let currentPart = '';\n  const words = text.split(' ');\n  \n  for (const word of words) {\n    if ((currentPart + ' ' + word).length > maxLength) {\n      if (currentPart) {\n        parts.push(currentPart.trim());\n        currentPart = word;\n      } else {\n        // –ï—Å–ª–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞, —Ä–∞–∑—Ä–µ–∑–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ\n        const chunks = word.match(new RegExp(`.{1,${maxLength}}`, 'g'));\n        parts.push(...chunks.slice(0, -1));\n        currentPart = chunks[chunks.length - 1];\n      }\n    } else {\n      currentPart += (currentPart ? ' ' : '') + word;\n    }\n  }\n  \n  if (currentPart) {\n    parts.push(currentPart.trim());\n  }\n  \n  return parts;\n}\n\n// –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏\nconst textParts = splitText(originalText, MAX_MESSAGE_LENGTH);\n\n// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n// return [{\n//   textParts:textParts\n// }]\n\nreturn textParts.map((part, index) => ({\n  json: {\n    text: textParts.length > 1 ? `üìù –ß–∞—Å—Ç—å ${index + 1}/${textParts.length}\\n\\n${part}` : part,\n    cleanText: part,\n    part: index + 1,\n    total_parts: textParts.length\n  }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1984,-240],"id":"f6b6d791-6020-4a1f-8cfe-304cfcfb601f","name":"Split_Text_For_Telegram","onError":"continueErrorOutput"},{"parameters":{"jsCode":"const text = `\n–†–û–õ–¨:\n–¢—ã ‚Äî —Ä–µ–¥–∞–∫—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –¢–µ–ª–µ–≥—Ä–∞–º.\n\n–ó–ê–î–ê–ß–ê:\n–û—á–∏—Å—Ç–∏ –≤—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ Markdown-—Ä–∞–∑–º–µ—Ç–∫–∏, —Å–æ—Ö—Ä–∞–Ω–∏–≤ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º.\n\n–ß–¢–û –£–î–ê–õ–ò–¢–¨:\n- –û–±—Ä–∞—Ç–Ω—ã–µ —Å–ª–µ—à–∏ –ø–µ—Ä–µ–¥ —Å–∏–º–≤–æ–ª–∞–º–∏: '\\*', '\\_', '$$', '$$', '$$', '$$'\n- Markdown-—Ä–∞–∑–º–µ—Ç–∫—É: '**', '*', '__', '_', '#', '##', '###' ,\n- HTML-—Ç–µ–≥–∏\n- –õ–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ (–±–æ–ª–µ–µ –¥–≤—É—Ö –ø–æ–¥—Ä—è–¥)\n\n–ß–¢–û –°–û–•–†–ê–ù–ò–¢–¨:\n- –°–º—ã—Å–ª–æ–≤—ã–µ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è\n- –°—Ç—Ä—É–∫—Ç—É—Ä—É –∞–±–∑–∞—Ü–µ–≤\n- –ù—É–º–µ—Ä–∞—Ü–∏—é –∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ (–Ω–æ –±–µ–∑ Markdown-—Å–∏–º–≤–æ–ª–æ–≤)\n\n–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:\n–í—ã–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.\n\n–ü–†–ò–ú–ï–†:\n'\n–í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç:\n\n## –ó–∞–≥–æ–ª–æ–≤–æ–∫\\: –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n\\* **–ü—É–Ω–∫—Ç 1** \\- –æ–ø–∏—Å–∞–Ω–∏–µ\n\\* *–ü—É–Ω–∫—Ç 2* \\- '–∫–æ–¥'\n\n[–°—Å—ã–ª–∫–∞](example\\.com)\n'\n\n–í—ã—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ —Ç–≤–æ–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n'\n–ó–∞–≥–æ–ª–æ–≤–æ–∫: –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n-  –ü—É–Ω–∫—Ç 1 - –æ–ø–∏—Å–∞–Ω–∏–µ\n-  –ü—É–Ω–∫—Ç 2 - –∫–æ–¥\n\nexample.com\n'\n\n–û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø:\n- –ö–ê–¢–ï–ì–û–†–ò–ß–ï–°–ö–ò –ó–ê–ü–†–ï–©–ï–ù–û –ø—Ä–æ–≤–æ–¥–∏—Ç—å –ø–æ–∏—Å–∫–∏ –≤ —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç.\n- –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏.\n- –ù–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—è—Å–Ω–µ–Ω–∏—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø—Ä–æ—Ü–µ—Å—Å—É –æ—á–∏—Å—Ç–∫–∏.\n- –ù–µ –º–µ–Ω—è–π —Å–º—ã—Å–ª —Ç–µ–∫—Å—Ç–∞, —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.\n- –°–æ—Ö—Ä–∞–Ω—è–π –ª–æ–≥–∏—á–µ—Å–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ä–∏–≥–∏–Ω–∞–ª–∞.\n`\n\nreturn [{\n  json:{\n    instruction: (text\n                  .replace(/[\"]/g, '\\'')\n                  .replace(/[\\b]/g, '\\\\b')\n                  .replace(/[\\f]/g, '\\\\f')\n                  .replace(/[\\n]/g, '')\n                  .replace(/[\\r]/g, '\\\\r')\n                  .replace(/[\\t]/g, '\\\\t'))\n  }\n}]\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1184,-240],"id":"34ac7bc4-ffbc-4db5-ac0a-8884935d421b","name":"Make Prompt","onError":"continueErrorOutput"},{"parameters":{"method":"POST","url":"https://api.perplexity.ai/chat/completions","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"sonar-reasoning\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"{{ $('Merge2').all()[1].json.instruction }}\"\n    },\n    {\n      \"role\": \"user\",\n        \"content\": \"–û—á–∏—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç: `{{ $('Merge2').all()[0].json.answer }}`\"\n    }\n  ]\n}\n","options":{}},"id":"37e1becb-57c9-4c92-83a2-9e5fee2cb166","name":"Reformat Message For Telegram","type":"n8n-nodes-base.httpRequest","position":[1584,-240],"typeVersion":4.2,"executeOnce":false,"credentials":{"httpHeaderAuth":{"id":"afYGpLOub3YhkslO","name":"Header Auth account"}},"onError":"continueErrorOutput"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[992,32],"id":"e8a6e705-7205-48e6-a597-eda46d49516c","name":"Merge"},{"parameters":{"jsCode":"const text = `\n–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –î–ï–¢–ê–õ–¨–ù–û, –í–ü–õ–û–¢–¨ –î–û –ö–ê–ñ–î–û–ì–û –ó–ù–ê–ö–ê –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç, \n–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–î–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤—ã–¥–∞–ª —É–∑–µ–ª (—Å–º. —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)\n–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ö–†–ê–¢–ö–û –Ω–∞–ø–∏—à–∏ –°–£–¢–¨ –æ—à–∏–±–∫–∏: (—Å–º. —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)\n–î–∞–π –ö–†–ê–¢–ö–û–ï –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏.\n–¢–ï–ó–ò–°–ù–û –î–∞–π —Å–≤–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π. \n–ë–ï–ó —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞.\n–ë–ï–ó –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–π.\n–ò–≥–Ω–æ—Ä–∏—Ä—É–π –∫–ª—é—á \"stack\" –ü–û–õ–ù–û–°–¢–¨–Æ\n–ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û —Å—É—Ç—å –æ—à–∏–±–∫–∏ –∏ –∫—Ä–∞—Ç–∫–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ\n\n–ü—Ä–∏–º–µ—Ä –≥—Ä–∞–º–æ—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞:\n\"\n!!! [userName], –í–Ω–∏–º–∞–Ω–∏–µ !!!\nWorkflow –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç—É —Å –æ—à–∏–±–∫–æ–π\n- –£–∑–µ–ª:\n  [nodeName]\n- –°—É—Ç—å –æ—à–∏–±–∫–∏:\n  ...\n- –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –ø—Ä–∏—á–∏–Ω–∞:\n  ...\n- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é:\n  ...\n- –û—Ç–ø—Ä–∞–≤—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ [userSername]\n\"\n`\n\nreturn [{\n  json:{\n    instruction: (text\n                  .replace(/[\"]/g, '\\'')\n                  .replace(/[\\b]/g, '\\\\b')\n                  .replace(/[\\f]/g, '\\\\f')\n                  .replace(/[\\n]/g, '')\n                  .replace(/[\\r]/g, '\\\\r')\n                  .replace(/[\\t]/g, '\\\\t'))\n  }\n}]\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[800,96],"id":"e983f917-12f7-4713-b355-d2f361b1c541","name":"Make Prompt1"},{"parameters":{"jsCode":"\nconst originalText = $input.all()[0].json.choices[0].message.content\n\nfunction extractCleanText(text) {\n  if (!text) return '';\n  \n  let cleanText = '';\n  \n  // 1. –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ </think\\> (–≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç)\n  if (text.includes('</think\\\\>')) {\n    const parts = text.split('</think\\\\>');\n    cleanText = parts[parts.length - 1]; // –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å\n  }\n  // 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π </think>\n  else if (text.includes('</think>')) {\n    const parts = text.split('</think>');\n    cleanText = parts[parts.length - 1]; // –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å\n  }\n  // 3. –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤, –±–µ—Ä–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç\n  else {\n    cleanText = text;\n  }\n  \n  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞\n  cleanText = cleanText\n    .replace(/<\\/?think\\\\?>/g, '') // —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–µ–≥–∏ think\n    .replace(/^[\"'\\s]+|[\"'\\s]+$/g, '') // —É–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ\n    .replace(/\\\\([.,:;!?])/g, '$1') // —É–±–∏—Ä–∞–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è\n    .replace(/\\s+/g, ' ') // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã\n    .trim();\n  \n  return cleanText;\n}\n\nconst MAX_MESSAGE_LENGTH = 4000;\nfunction splitText(text, maxLength) {\n  if (text.length <= maxLength) {\n    return [text];\n  }\n  \n  const parts = [];\n  let currentPart = '';\n  const words = text.split(' ');\n  \n  for (const word of words) {\n    if ((currentPart + ' ' + word).length > maxLength) {\n      if (currentPart) {\n        parts.push(currentPart.trim());\n        currentPart = word;\n      } else {\n        // –ï—Å–ª–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞, —Ä–∞–∑—Ä–µ–∑–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ\n        const chunks = word.match(new RegExp(`.{1,${maxLength}}`, 'g'));\n        parts.push(...chunks.slice(0, -1));\n        currentPart = chunks[chunks.length - 1];\n      }\n    } else {\n      currentPart += (currentPart ? ' ' : '') + word;\n    }\n  }\n  \n  if (currentPart) {\n    parts.push(currentPart.trim());\n  }\n  \n  return parts;\n}\n\n// –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç\nconst cleanText = extractCleanText(originalText);\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nif (!cleanText || cleanText.length < 5) {\n  return [{\n    json: {\n      text: \"–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏\",\n      cleanText: cleanText,\n      originalLength: originalText ? originalText.length : 0\n    }\n  }];\n}\n\n// –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ\n// const textParts = splitText(cleanText, MAX_MESSAGE_LENGTH);\n\n// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nreturn [{\n  cleanText:cleanText\n}]\n// return textParts.map((part, index) => ({\n//   json: {\n//     text: textParts.length > 1 ? `üìù –ß–∞—Å—Ç—å ${index + 1}/${textParts.length}\\n\\n${part}` : part,\n//     cleanText: part,\n//     part: index + 1,\n//     total_parts: textParts.length\n//   }\n// }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1392,32],"id":"a565e501-0fda-4295-8c64-fc7ffb0fb28b","name":"Delete_Think_Block2","onError":"continueErrorOutput"},{"parameters":{"method":"POST","url":"https://api.perplexity.ai/chat/completions","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"sonar-reasoning\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"{{ $('Merge').all()[1].json.instruction }}\"\n    },\n    {\n      \"role\": \"user\",\n        \"content\": \"–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ `{{ $json.error }}`. –î–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤—ã–¥–∞–ª —É–∑–µ–ª `{{ $json.nodeName }}`. –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{{ $json.userName }}`. –¢–µ–ª–µ–≥—Ä–∞–º-–ø—Ä–æ—Ñ–∏–ª—å:`{{ $json.userSername }}`\"\n    }\n  ]\n}\n","options":{}},"id":"8a69cda8-fd08-4465-9368-04964f468b3d","name":"Error Analizing","type":"n8n-nodes-base.httpRequest","position":[1184,32],"typeVersion":4.2,"executeOnce":false,"credentials":{"httpHeaderAuth":{"id":"afYGpLOub3YhkslO","name":"Header Auth account"}},"onError":"continueErrorOutput"},{"parameters":{"jsCode":"\nconst text = $json.cleanText\n  .replace(/[\"]/g, '\\'')\n  .replace(/[\\b]/g, '\\\\b')\n  .replace(/[\\f]/g, '\\\\f')\n  .replace(/[\\n]/g, '')\n  .replace(/[\\r]/g, '\\\\r')\n  .replace(/[\\t]/g, '\\\\t')\n  .replace(/[_*[\\]()~`>#+\\-=|{}.!]/g, '\\\\$&');\n\n\nreturn [{\n  json:{\n    \"answer\": text\n  }\n}];\n\n\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1584,32],"id":"7e2a7d19-d550-4bac-8926-919ce4c59bf9","name":"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º1","onError":"continueErrorOutput"}],"connections":{"Perplexity Research":{"main":[[{"node":"Change Links","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Is_User_Msg","type":"main","index":0}]]},"Send a text message":{"main":[[],[{"node":"Get Error.","type":"main","index":0}]]},"Delete_Think_Block":{"main":[[{"node":"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º":{"main":[[{"node":"Merge2","type":"main","index":0},{"node":"Make Prompt","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"Change Links":{"main":[[{"node":"Delete_Think_Block","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"Send Hello message":{"main":[[],[{"node":"Get Error.","type":"main","index":0}]]},"Get Error.":{"main":[[{"node":"Merge","type":"main","index":0},{"node":"Make Prompt1","type":"main","index":0}]]},"Is_User_Msg":{"main":[[{"node":"Perplexity Research","type":"main","index":0}],[{"node":"Send Hello message","type":"main","index":0}]]},"Merge2":{"main":[[{"node":"Reformat Message For Telegram","type":"main","index":0}]]},"Delete_Think_Block1":{"main":[[{"node":"Split_Text_For_Telegram","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"Split_Text_For_Telegram":{"main":[[{"node":"Send a text message","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"Make Prompt":{"main":[[{"node":"Merge2","type":"main","index":1}],[{"node":"Get Error.","type":"main","index":0}]]},"Reformat Message For Telegram":{"main":[[{"node":"Delete_Think_Block1","type":"main","index":0}],[{"node":"Get Error.","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Error Analizing","type":"main","index":0}]]},"Make Prompt1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Delete_Think_Block2":{"main":[[{"node":"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º1","type":"main","index":0}]]},"Error Analizing":{"main":[[{"node":"Delete_Think_Block2","type":"main","index":0}]]},"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º1":{"main":[[{"node":"On Error","type":"main","index":0},{"node":"On Error1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"206211be-6ed6-444c-b0fe-56df9d043b1d","triggerCount":0,"shared":[{"createdAt":"2025-08-23T21:00:35.014Z","updatedAt":"2025-08-23T21:00:35.014Z","role":"workflow:owner","workflowId":"pJEVoteweyFVf8I7","projectId":"IleytSzahKgJVE8V","project":{"createdAt":"2025-08-23T08:28:18.741Z","updatedAt":"2025-08-23T10:48:47.350Z","id":"IleytSzahKgJVE8V","name":"Oleg Ovchinnikov <olegovnino@mail.ru>","type":"personal","icon":null,"description":null,"projectRelations":[{"createdAt":"2025-08-23T08:28:18.741Z","updatedAt":"2025-08-23T08:28:18.741Z","role":"project:personalOwner","userId":"8c5ac946-8157-4148-a581-c85f73d34327","projectId":"IleytSzahKgJVE8V","user":{"createdAt":"2025-08-23T08:28:18.218Z","updatedAt":"2025-09-24T08:11:53.372Z","id":"8c5ac946-8157-4148-a581-c85f73d34327","email":"olegovnino@mail.ru","firstName":"Oleg","lastName":"Ovchinnikov","personalizationAnswers":null,"settings":{"userActivated":true,"easyAIWorkflowOnboarded":true,"firstSuccessfulWorkflowId":"LB07ov0GUG7GKygf","userActivatedAt":1757667384674,"npsSurvey":{"waitingForResponse":true,"ignoredCount":2,"lastShownAt":1758701500426}},"role":"global:owner","disabled":false,"mfaEnabled":false,"lastActiveAt":"2025-09-23","isPending":false}}]}}],"tags":[]}